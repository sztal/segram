[build-system]
requires = [ "setuptools >= 61.0", "wheel>=0.37" ]
build-backend = "setuptools.build_meta"

[project]
name = "segram"
requires-python = ">=3.11"
version = "0.0.0"
authors = [{name = "Szymon Talaga", email = "stalaga@protonmail.com"}]
readme = "README.md"
dependencies = [
    "spacy>=3.4",
    "more-itertools>=8.0"
]

[project.optional-dependencies]
coref = [
    "spacy>=3.4,<3.5",
    "spacy-experimental==0.6.1"
]

[project.entry-points.spacy_factories]
segram = "segram.nlp.pipeline.factories:create_base"

[tool.setuptools]
include-package-data = true
package-dir = { segram = "segram" }

[tool.setuptools.package-data]
segram = ["nlp/**/*.json", "nlp/**/*.json.gz"]

[tool.pytest.ini_options]
minversion = "7.2"
addopts = [
    "--verbose",
    "--tb=no",
    "--capture=no",
    "--pdbcls=IPython.terminal.debugger:Pdb",
]
testpaths = [
    "tests"
]
python_files = ["test_*.py", "benchmark_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
branch = true
command_line = "-m pytest"

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
    ]

ignore_errors = true

[tool.coverage.html]
directory = "coverage_html_report"
